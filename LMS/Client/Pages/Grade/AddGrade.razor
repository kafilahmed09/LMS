@page "/Grade/Add"
@using LMS.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager Navigate
@using System.Net.Http

<h3>Add Grade</h3>
<hr />

@if (DisplayMessage != null)
{
    <span class="alert-info">@DisplayMessage</span>
}

<EditForm Model="@Grade" OnValidSubmit="@SaveGrade">
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label>Grade Name</label>
                <input type="text" class="form-control" @bind-value="Grade.Name" />
                <ValidationMessage For="@(()=> Grade.Name)"></ValidationMessage>
            </div>
            <div class="form-group">
                <button class="btn btn-primary" type="submit" @onclick="SaveGrade">Save Grade</button>
                @*<NavLink href="DisplayCategories" class="btn btn-info">Back to list</NavLink>*@
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label>Select Level</label>
                <select @onchange="@SchoolLevelClicked" class="form-control">
                    @foreach (var level in schoollevels)
                    {
                        <option value="@level.SchoolLevelId">@level.Name</option>
                    }
                </select>
            </div>
        </div>
    </div>
</EditForm>


@code {
    public string DisplayMessage;
    public Grade Grade = new Grade();
    private List<SchoolLevel> schoollevels = new List<SchoolLevel>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            schoollevels = await Http.GetFromJsonAsync<List<SchoolLevel>>("api/SchoolLevels");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    public async Task SaveGrade()
    {
        await Http.PostAsJsonAsync("api/Grades", Grade);
        DisplayMessage = "Save ditrict successfully!";
        Navigate.NavigateTo("Grade/Display");
    }

    public void SchoolLevelClicked(ChangeEventArgs schoolLevelEvent)
    {
        Grade.SchoolLevelId = int.Parse(schoolLevelEvent.Value.ToString());
        this.StateHasChanged();
    }
}
